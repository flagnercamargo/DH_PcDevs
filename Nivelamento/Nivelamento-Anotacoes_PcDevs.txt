var serie = "serie1"
console.log(serie)

serie = "serie2"
console.log(serie)

var logradouro = "Rua de casa, 10"
var bairro = "Meu bairro"
console.log(logradouro + bairro)

console.log(logradouro + " - " + bairro)

var enderecoCompleto = logradouro + " - " + bairro

var nome = "João"
var idade = 17
if (idade >= 18) {
console.log("Olá, " + nome + ".")
console.log("Você passou no nosso teste e já pode dirigir!")
}
console.log("Olá, " + nome + ".")

***************************************************

Queremos um código que oriente o usuário de acordo com o saldo da conta bancária. Para isso precisamos de uma variável saldo que guarda um número decimal(float), e imprime uma mensagem de acordo com a situação financeira. Se o saldo for maior que 0 (zero) imprima “Seu saldo está positivo! Gostaria de fazer um investimento?”, agora, se o saldo for menor que zero(0) imprima “Seu saldo está negativo! Gostaria de fazer um empréstimo?” 

var nome = "João"
var saldo = 17.00
if (saldo > 0) {
console.log("Olá, " + nome + ".")
console.log("Seu saldo está positivo! Gostaria de fazer um investimento?")
}
if (saldo < 0) {
console.log("Olá, " + nome + ".")
console.log("Seu saldo está negativo! Gostaria de fazer um empréstimo?")
}

***************************************************
Operadores relacionais
Operador Significado
> Maior
< Menor
= Igual
== Comparação de valor
=== Comparação de valor e tipo de dado
>= Maior ou igual
<= Menor ou igual

var idade = 17
if (idade >= 18) {
console.log("Você é obrigado a votar")
}
if (idade == 16) {
console.log("Seu voto é opcional")
}

if( condição ) {
// código que será executada caso a condição seja verdadeira
} else {
// código que será executado caso a condição seja falsa;
}

var idade = 15

if (idade >= 18) {
    console.log("Você já pode dirigir!")
} else {
    console.log("Ops, você ainda não tem a idade mínima para dirigir!");
}

var estrangeiro = true

if ( estrangeiro ) {
  console.log("Você poderia apresentar seu RNE, por favor?")
  } else {
    console.log("Você poderia apresentar seu CPF, por favor?");
    }

var numeroDaSorte = 18

if ( numeroDaSorte % 2 == 0 ) {
    console.log("Par")
} else {
    console.log("Ímpar");
}


if(semaforo == 'verde'){
    console.log('Pode seguir!')
} else if(semaforo == 'amarelo'){
    console.log('Atenção, o sinal irá fechar!')
} else {
    console.log('Pare, e espere o sinal abrir!')
}

Operadores lógicos

var dia = "domingo"
var tempo = "bom"

if(dia == "domingo" && tempo == "bom"){
    console.log("Hoje é dia de festa!")
}else{
    console.log("Hoje é um dia normal!")
}

var corIphone = "Preto"

if(corIphone == "Preto" || corIphone == "Prata"){
    console.log("Vou fechar a compra")
}else{
    console.log("Não quero mais esse iPhone")
}

var feriado = false

if(!feriado){
    console.log("tenho que trabalhar!")
}else{
    console.log("Oba, posso ficar em casa!")
}


- Dias da semana pro sistema: segunda, terca, quarta, quinta, sexta, sabado e domingo.
- Você terá a seguinte variável no código: diaSemana
- Para esse exercício você deve usar na condição do if o operador && para juntar as condições lógicas junto ao operador diferente de(!=).


var diaSemana = 'sabado'

if(diaSemana != "sabado" && diaSemana != "domingo"){
    console.log("Você pode ir ao banco")
}else{
    console.log("O banco está fechado, tente outro dia")
}

***************************************************

for (var contador = 1; contador < 10; contador++) {
// código a ser repetido
}


var listaDeCarros = [ "Fox", "Uno", "Gol", "Astra", "Fiesta"]

for (i=0; i < listaDeCarros.length ; i++){
    console.log("Nome do Carro: " + listaDeCarros[i])
}

var listaDeNomes = ['Cesar', 'Pamela', 'Camila', 'Hendy']
var buscar = 'Cesar'

for(var i = 0; i < listaDeNomes.lenght; i++){
    if(listaDeNomes[i] == buscar){
        console.log('Encontrei o nome')
        break // sai do loop quando a condição é encontrada
    }
}

var cartela = [8, 13, 18, 22, 42, 49]
  var numeroSorteado = 42

for ( var i = 0; i < cartela.length; i++) {
  if( cartela[i] == numeroSorteado){
    console.log('Encontrei o número!' )
    break
    }
}

for ( var i = 0; i <= 20; i++) {
  if( i % 2 != 0){
    continue
    }
    console.log(i)
}


var familia = ["Joana", "Felipe", "Gabriela", "Carlos", "Pedro", "Bruno"]

for ( var i = 0; i < familia.length; i++ ) {
   if ( familia[i] == "Pedro" ) {
       console.log(familia[i] + " Sousa");
       continue
   }
   console.log(familia[i] + " Macedo");
}

***************************************************

Funções

function exibirNomeDeCarros(){
    var listaDeCarros = [ "Fox", "Uno", "Gol", "Astra", "Fiesta"]
    for (var i=0; i < listaDeCarros.length ; i++){
        console.log("Nome do Carro é: " + listaDeCarros[i])
    }
}

Declarando funções - Listar produtos

Um mercado tem uma lista de produtos, que eles querem exibir para todo novo cliente que chegar! Como o processo é um pouco trabalhoso e repetitivo eles precisam do seu conhecimento em funções para ajudá-los.

Eles já tem um código, porém toda vez eles precisam reescrever o código para exibir ao cliente:

var lista = [ 'Leite', 'tomate', 'Biscoito', 'Tapioca']
for(var i = 0; i < lista.length; i++){
	console.log(lista[i])
}

Seu trabalho é melhorar esse código, para ficar mais simples utilizá-lo. Precisamos que você transforme o código acima em uma função chamada listarProdutos.

function listarProdutos(){
	var lista = [ 'Leite', 'tomate', 'Biscoito', 'Tapioca']
	for(var i = 0; i < lista.length; i++){
		console.log(lista[i])
	}
}

function tabuadaDoSete(){
    var tabuada = 7
    for (i = 1 ;i <= 10;i++){
        console.log(tabuada + " x " + i + " = " + (tabuada * i))
    }
}

function tabuadaDoSete(numeroA, numeroB){
    numeroA + numeroB
}

function tabuadaDoSete(numeroA, numeroB){
    return numeroA + numeroB // para se utilizar a resposta posteriormente.
}

function menorNumero(numA, numB){
    if (numA < numB){
        return numA
    } else if (numB < numA){
        return numB
    }
    return numA
}

***************************************************

Usando funções - Começa com Maiúscula

O código abaixo já tem a função comecaComMaiuscula(palavra) definida. Essa função retorna true caso a palavra passada no parâmetro seja iniciada por uma letra maiúscula e false caso contrário. Use um for  com um contador i para imprimir para cada palavra no array de palavras as seguintes frases: “Começa com maiúscula” caso a palavra comece com maiúscula e “Não começa com maiúscula” caso contrário.

function comecaComMaiuscula(palavra){
   return /^[A-Z]/.test(palavra)
}
 
var palavras = ["Amor", "copo", "Bolacha", "biscoito"];
 
for(var i = 0; i < palavras.length; i++){
   if (palavras[i] == comecaComMaiuscula()){
      console.log("Começa com maiúscula");
   } else {
      console.log("Não começa com maiúscula");
   }
}

Usando funções - Valida CPF

Temos no código abaixo uma função que já foi definida. Ela se chama validaCPF.

Ela definida para receber um parâmetro que representa um possível CPF. Tudo que ela faz resumi-se em um único objetivo: Retornar true caso o parâmetro seja um CPF válido ou false caso contrário. Eis aqui algo legal sobre funções: tudo que você precisa para utilizá-las é saber o que ela faz. Você não precisa saber o como ela faz.

Execute utilize a função validaCPF para imprimir “CPF válido” caso o “576.524.020-85” seja um cpf válido. Caso contrário, imprima “CPF inválido”

if (validaCPF("576.524.020-85")){
    console.log("CPF válido")
}
else {
console.log("CPF inválido")
}

=====================

Usando funções - deixaEntrar

Uma rede de cinemas quer implementar um sistema para controlar a entrada nas suas salas. Os clientes, antes de entrar na sala, devem apresentar o RG em uma câmera. A câmera seria capaz de ler a data de nascimento do cliente e, caso ele não tenha idade suficiente para assistir a sessão, o acesso dele não seria autorizado.

Um dos programadores já fez uma função que calcula a idade com base na data de nascimento. Ela recebe como parâmetro uma data de nascimento no formato dd/mm/aaaa (dia com dois dígitos, mês com dois dígitos e ano com quatro dígitos) e retorna idade da pessoa hoje.

Precisamos agora que você escreva a função deixaEntrar(dataDeNascimento, censura).

A função deve receber dois parâmetros:

    O primeiro deve representar a data de nascimento do cliente no formato dd/mm/aaaa 

    O segundo deve representar a censura da sessão, ou seja, a idade mínima do cliente para que ele possa acessar a sala.

A função deve retornar true caso o cliente tenha idade maior ou igual a censura e false caso contrário.

// A função a seguir (calculaIdade) não precisa ser alterada
// A sua função deve ser escrita logo abaixo desta
function calcularIdade(dataDeNascimento) {
   var [dia, mes, ano] = dataDeNascimento.split('/');
   var d = new Date();
   var anoAtual = d.getFullYear();
   var mesAtual = d.getMonth() + 1;
   var diaAtual = d.getDate();
   ano = +ano; mes = +mes; dia = +dia;
   var quantosAnos = anoAtual - ano;
   if (mesAtual < mes || mesAtual == mes && diaAtual < dia) {
       quantosAnos--;
   }
   return quantosAnos < 0 ? 0 : quantosAnos;
}

function deixaEntrar(dataDeNascimento, censura) {
    return calcularIdade(dataDeNascimento,censura);
}

Usando funções - Filtrar produtos

Uma loja virtual permite a seus visitantes filtrar produtos pelo preço. Existe um array com os preços dos produtos. Um programador já criou uma função maisBaratosQue(valor, precos) que retorna um array com os preços dos produtos mais baratos que o valor passado como parâmetro. Outro programador já criou uma função maisCarosQue(valor, precos) que retorna um array com os preços mais caros que o valor passado como parâmetro. Chegou sua vez!

Crie uma função precosEntre(valorMenor, valorMaior, precos) que deve utilizar as funções maisBaratosQue e maisCarosQue para retornar os preços que estão entre o valorMenor e o valorMaior. Sua função deve receber então dois parâmetros:

    valorMenor para representar o valor mínimo dos preços a serem listados

    valorMaior para representar o valor máximo dos preços a serem listados

    precos para representar um array com os preços dos produtos

Ela deve retornar um array com todos os preços entre valorMenor e valorMaior

function maisBaratosQue(valor, precos) {
   return precos.filter(p => p <= valor);
}
 
function maisCarosQue(valor, precos){
   return precos.filter(p => p >= valor);
}

function precosEntre(valorMenor, valorMaior, precos){
   var maisBaratos = maisBaratosQue(valorMaior, precos);
   return maisCarosQue(valorMenor, maisBaratos);
}

=========================

Funções Nativas - Estava presente na aula?
Nas escolas do futuro não haverá necessidade de chamadas. Ao entrar em sala, uma câmera fará o reconhecimento facial do aluno e registrará sua presença!
Imagine que, a cada aula, um array guardasse o nome de todos os alunos que estiveram presentes na aula.

Escreva uma função estavaPresenteNaAula(nomeDoAluno, nomesDosPresentes)

Essa função deve receber dois parâmetros:

    O primeiro deve representar o nome de um aluno

    O segundo deve representar um array com o os nomes dos alunos presentes.

A sua função deve retornar true caso o nome do aluno passado como parâmetro estiver entre os presentes. false caso contrário.

function estavaPresenteNaAula(nomeDoAluno, nomesDosPresentes) {
    if(nomesDosPresentes.indexOf('Joãozinho')) {
        return true
    } else {
        return false
    }
}


Funções Nativas - transformaParaMaiusculo

 Algumas vezes precisamos padronizar as informações antes de guardá-las no nosso sistema. Escreva uma função transformaParaMaiusculo(palavras). Essa função recebe como parâmetro um array de palavras. Ela deve retornar um array com a versão MAIÚSCULA de todas as palavras contidas no array passado como parâmetro.

function transformaParaMaiusculo(palavras) {
    var array=Array()
    for(var i=0;i<palavras.length;++i)
    array.push(palavras[i].toUpperCase())
    return array
}


Funções Nativas - Gerar Dezenas
Uma fábrica de biscoitos da sorte precisa de um sistema. O sistema deve gerar seis dezenas aleatórias para serem impressas. Sabe como é: Palpites para seus clientes jogarem na mega sena! O seu trabalho é escrever uma função gerarDezenas(). Essa função não recebe nenhum parâmetro. Tudo que ela deve fazer é gerar e retornar um array contendo seis números aleatórios entre 1 e 60.

function gerarDezenas() {
    var array = Array();
    for ( var i = 0; i < 6; i++) {
        array.push(Math.round(Math.random * 59) +1);
    }
}


Funções Nativas - Maximo e Minimo
Escreva uma função maxmin(a, b, c, d, e) que receba cinco números como parâmetros.
Sua função deve retornar um array onde o primeiro elemento é o menor dos parâmetros e o segundo elemento é o maior dos parâmetros.

function maxmin(a, b, c, d, e) {
    var array = [0, 0]
    array[0]=Math.min(a, b, c, d, e)
    array[1]=Math.max(a, b, c, d, e)
    return array
}


No fim de semana o elevador do nosso prédio quebrou, restringindo muito o fluxo de pessoas. Considerando isso, apenas os moradores dos apartamentos com número par poderão usar o elevador. Escreva um código que, com base na variável moradores nos informe quais moradores poderão utilizar o elevador. O número do apartamento é a sua posição no array, e o nome do morador é o valor.

Imprima no console a lista a seguinte frase: 'O morador ' + nome do morador + ' pode usar o elevador'

var moradores = [
    "Fulano de Tal",
    "Beltrano da Cia",
    "Viajante do Tempo",
    "Morador da Lua",
    "Marciano Azul",
    "Et da Eslováquia",
    "Jedi do Lado Cinza da Força",
    "Baby Yoda Amarelo"
]

for (var i = 0; i < moradores.length; i++) {
    if (i % 2 == 0) {
        console.log("O morador " + moradores[i] + " pode usar o elevador")
    }
}


Dados de um usuário

Em uma  academia está acontecendo um cadastro de vários usuários contendo as seguintes informações: nome, idade e altura. E para realizar um determinado treino, existe alguns requisitos: Ter 18 anos ou mais e ter uma altura igual ou maior a 1,70.

Crie uma função chamada maiorAlto que retorne verdadeiro (true) caso ele atenda os requisitos, e falso (false) para o contrário. Nessa função você irá receber um parâmetro que será um array, contendo na primeira posição o nome, segunda posição a idade do aluno e na terceira contendo a altura em Centímetros.

Exemplo:
maiorAlto(["Aluno incrível", 18, 170]) // retorna true
maiortAlto(["Aluno baixo", 17, 150]) // retorna false

var usuario1 = ['Et da Estônia', 17, 170]
var usuario2 = ['Pessoa do Pântano', 39, 198]
var usuario3 = ['Homem da Lua Virada', 21, 149]
var usuario4 = ['Pequena Paulistana', 18, 171]
var usuario5 = ['Menino da Porteira', 13, 142]

function maiorAlto (array) {
    if (array[1] >= 18 && array[2] >= 170 ) {
        return true
    } else {
        return false
    }
}


Academia

Uma academia precisa separar grupos de pessoas tendo como base a sua altura para que dessa forma consiga formar grupos para as aulas de zumba. Temos um array que lista a altura de cada aluno da academia, e outros 3 arrays (Grupo A, B e C) que são classificados da seguinte forma: 


grupoA - Alunos com altura entre 150 a 159
grupoB - Alunos com altura entre 160 a 169
grupoC - Alunos com altura de 1.70 ou mais

Seu trabalho é pegar cada valor do array alunos e colocar o valor correspondente em seu respectivo grupo. Para esse exercício, você precisará usar loops, condicionais e funções de arrays.

var alunos = [170, 159, 151, 187, 156, 191, 165, 154, 167, 169, 171, 170, 160]

var grupoA = []
var grupoB = []
var grupoC = []
for ( var i = 0; i < alunos.length; i++) {
    if ((alunos[i] >= 150 ) && (alunos[i] <= 159)) {
        grupoA.push(alunos[i]);
    }
    else if ((alunos[i] >= 160) && (alunos[i] <= 169)) {
        grupoB.push(alunos[i]);
    }
    else if (alunos[i] >= 170) {
        grupoC.push(alunos[i]);
    }
}


Estacionamento

Um estacionamento deseja automatizar a cobrança de mensalistas. Para isso decidiu simplificar a forma de calcular o valor devido pelo seu cliente. A quantia a ser paga pelos seus usuários depende do número de entradas que o veículo realiza no estacionamento. A cada entrada, a placa do veículo é registrada. Ao final do mês, conta-se o número de entradas que o veículo realizou e faz-se o seguinte cálculo:

    Se o motorista realizou até 20 entradas, ele deve pagar R$ 10,00 por entrada realizada.


    Da vigésima primeira entrada em diante, cada entrada custa R$ 5,00 ao cliente.


	Agora, você deve ajudar na automatização da cobrança escrevendo duas funções.

A primeira função se chama calcularNumeroDeEntradas(placa). Ela deve receber um único parâmetro que representa a placa de um carro. A função deve retornar o número de entradas que esse carro realizou no estacionamento. Em outras palavras, o número de vezes que a placa passada como parâmetro aparece no array placas.

A segunda função se chama calcularValorDevido(placa). Ela deve receber um único parâmetro que representa a placa de um carro. A função deve calcular o valor que o proprietário do carro tem que pagar segundo a política de preços estabelecida. Naturalmente, será necessário utilizar a primeira função dentro da segunda.

// Esse array é utilizado dentro das funções. Cada placa neste array representa
// uma entrada do respectivo veículo no estacionamento. Não é necessário alterar
// esse array.
var placas = [
   'RXB-2525', 'AKX-3333', 'ORO-7142','RXB-2525', 'AKX-3333', 'ORO-7142',
   'AKX-3333', 'RXB-2525', 'AKX-3333','AKX-3333', 'RXB-2525', 'AKX-3333',   'RXB-2525', 'AKX-3333', 'ORO-7142','AKX-3333', 'AKX-3333', 'RXB-2525',
   'AKX-3333', 'ORO-7142', 'ORO-7142','AKX-3333', 'AKX-3333', 'RXB-2525',
   'AKX-3333', 'AKX-3333', 'RXB-2525','AKX-3333', 'AKX-3333', 'RXB-2525',
   'AKX-3333', 'ORO-7142', 'ORO-7142','AKX-3333', 'ORO-7142', 'ORO-7142',
   'ORO-7142', 'RXB-2525', 'AKX-3333','AKX-3333', 'ORO-7142', 'ORO-7142',
   'AKX-3333', 'RXB-2525', 'AKX-3333','AKX-3333', 'RXB-2525', 'AKX-3333',
   'RXB-2525', 'AKX-3333', 'ORO-7142','AKX-3333', 'AKX-3333', 'RXB-2525',
   'AKX-3333', 'ORO-7142', 'ORO-7142','AKX-3333', 'AKX-3333', 'RXB-2525',
   'AKX-3333', 'AKX-3333', 'RXB-2525','AKX-3333', 'AKX-3333', 'RXB-2525'
]

function calcularNumeroDeEntradas(placa){
   var contador = 0;
   for (var i = 0 ; i < placas.length ; i++) {
      if (placas[i] == placa) {
         contador++;
      }
   }
   return contador;
}
 
function calcularValorDevido(placa){
   var numEntradas = calcularNumeroDeEntradas(placa);
   if (numEntradas <= 20) {
      return 10.00 * numEntradas;
   } else {
      return (200 + (numEntradas - 20) * 5);
   } 
}


Cinema
Em um site sobre cinema, os visitantes cadastrados podem dar notas de 0 a 5 para um filme que ele tenha assistido. Cada filme tem um grande array de notas atribuídas pelos visitantes. Contudo, além de dar notas para os filmes, os visitantes querem ver o que as outras pessoas acharam do filme! É aí que você entra com seu código:

Escreva uma função calculaGostos(notas)

Essa função deve ser escrita para receber somente um parâmetro: um array de notas. Ela deve retornar também um array com três elementos:

    O primeiro, com a quantidade de notas iguais a 0 ou 1. Seriam os que não gostaram do filme

    O segundo, com a quantidade de notas iguais a 2 ou 3. Seriam os que acharam o filme mediano

    O terceiro, com a quantidade de notas iguais a 4 ou 5. Seriam os que gostaram do filme.

function calculaGostos (notas) {
    var nNaoGostaram = 0;
    var nMediano = 0;
    var nGostaram = 0;

    for (var i = 0 ; i < notas.length ; i++) {
        if (notas[i] >= 0 && notas[i] < 2) {
            nNaoGostaram++;
        } else if (notas[i] >= 2 && notas[i] < 4) {
            nMediano++;
        } else {
            nGostaram++;
        }
    }
    return [nNaoGostaram, nMediano, nGostaram];
}




